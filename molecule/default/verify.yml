---

- name: Verify arkimesetup
  hosts: arkimegroup
  vars:
    arkime_home: /opt/arkime
    arkime_bin: /opt/arkime/bin/capture
    config: /opt/arkime/etc/config.ini
    ports:
      # web ui
      - { h: 0.0.0.0, p: 8005 }
      # elasticsearch
      - { h: 0.0.0.0, p: 9200 }
    verify_users:
      - john
      - jane
    url: http://localhost:8005
    is_container: false
  pre_tasks:
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
    - name: Set fact is_container
      ansible.builtin.set_fact:
        is_container: true
      when: >
        (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker"
           or ansible_virtualization_type == "containerd"
           or ansible_virtualization_type == "container"
          )
        )
  tasks:

    - name: Check arkime binary
      ansible.builtin.stat:
        path: "{{ arkime_bin }}"
      register: bin1
    - name: Validate arkime binary is present
      ansible.builtin.assert:
        that: bin1.stat.exists and bin1.stat.size != 0 and bin1.stat.mode == '0755'

    - name: Check config file
      ansible.builtin.stat:
        path: "{{ config }}"
      register: cfg1
    - name: Validate configuration file is present
      ansible.builtin.assert:
        that: cfg1.stat.exists and cfg1.stat.size != 0

    - name: Ensure process is running
      ansible.builtin.command: pgrep -u nobody capture
      register: ps1
      changed_when: false
      failed_when: false
    - name: Validate ps output
      ansible.builtin.assert:
        that: ps1.stdout
      when:
        - not is_container|bool

    - name: Ensure ports are listening
      ansible.builtin.wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items: "{{ ports }}"
      when:
        - not is_container|bool

    - name: Fetch localhost endpoint
      ansible.builtin.uri:
        url: "{{ url }}"
        validate_certs: no
        return_content: yes
        status_code:
          - 401
      register: web
      failed_when: false
    - name: Validate localhost endpoint
      ansible.builtin.assert:
        that:
          - web.status == 401
      when:
        - not is_container|bool

    - name: Check no errors in capture log
      ansible.builtin.command: grep ERROR /opt/arkime/logs/capture.log
      register: log1
      changed_when: false
      failed_when: false
    - name: Validate log1
      ansible.builtin.assert:
        that: log1.rc != 0
      when:
        - not is_container|bool

    - name: Check elastic health
      ansible.builtin.uri:
        url: http://localhost:9200/_cat/health
        return_content: yes
      changed_when: false
      failed_when: false

    - name: Check elastic info
      ansible.builtin.command: /opt/arkime/db/db.pl http://localhost:9200 info
      changed_when: false
      failed_when: false
